# Generated by Django 5.2.4 on 2025-07-14 16:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ApplianceProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "total_kwh_per_day",
                    models.FloatField(
                        help_text="Estimated total daily energy usage (kWh)"
                    ),
                ),
                ("description", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="InstallationPackage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("system_size", models.FloatField(help_text="Size in kW")),
                ("system_cost", models.FloatField(help_text="Cost in MMK")),
                (
                    "lifespan",
                    models.PositiveIntegerField(help_text="Years of operation"),
                ),
                ("description", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "sunlight_hours",
                    models.FloatField(help_text="Average sunlight per day"),
                ),
                (
                    "electricity_rate",
                    models.FloatField(help_text="Electricity price in MMK/kWh"),
                ),
                ("latitude", models.FloatField(help_text="Latitude")),
                ("longitude", models.FloatField(help_text="Longitude")),
            ],
        ),
        migrations.CreateModel(
            name="IncentiveProgram",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("grant_amount", models.FloatField(help_text="Discount/grant in MMK")),
                (
                    "region",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="solar_analyzer.region",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SolarInputSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "usage_type",
                    models.CharField(
                        choices=[("daily", "Daily"), ("monthly", "Monthly")],
                        max_length=10,
                    ),
                ),
                (
                    "energy_usage",
                    models.FloatField(
                        help_text="Energy usage in kWh (daily or monthly)"
                    ),
                ),
                ("electricity_rate", models.FloatField(help_text="MMK per kWh")),
                ("system_size", models.FloatField(help_text="System size in kW")),
                (
                    "sunlight_hours",
                    models.FloatField(help_text="Average sunlight hours/day"),
                ),
                (
                    "system_cost",
                    models.FloatField(help_text="Total system cost in MMK"),
                ),
                (
                    "incentives",
                    models.FloatField(
                        default=0, help_text="Grants or discounts in MMK"
                    ),
                ),
                (
                    "lifespan",
                    models.PositiveIntegerField(
                        default=20, help_text="Expected lifespan in years"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("annual_production", models.FloatField(blank=True, null=True)),
                ("annual_savings", models.FloatField(blank=True, null=True)),
                ("total_savings", models.FloatField(blank=True, null=True)),
                ("net_cost", models.FloatField(blank=True, null=True)),
                ("payback_period", models.FloatField(blank=True, null=True)),
                ("roi_percent", models.FloatField(blank=True, null=True)),
                ("cost_per_kwh", models.FloatField(blank=True, null=True)),
                ("grid_cost", models.FloatField(blank=True, null=True)),
                (
                    "appliance_profile",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="solar_analyzer.applianceprofile",
                    ),
                ),
                (
                    "incentive_program",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="solar_analyzer.incentiveprogram",
                    ),
                ),
                (
                    "installation_package",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="solar_analyzer.installationpackage",
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="solar_analyzer.region",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
